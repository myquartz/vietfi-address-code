AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  vietfi-address-code

  SAM Template for AddressFunction

Globals:
  Api:
    # API Gateway regional endpoints
    EndpointConfiguration: REGIONAL

  Function:
    Timeout: 3
    MemorySize: 256

Parameters:
  BucketName:
    Type: String
    Description: Bucket name for get DB File
  DataFileKey:
    Type: String
    Default: "address_db.sqlite3"
  CorsAllowOrigin:
    Type: String
    Default: "'https://vietfi-api-data.s3.ap-southeast-1.amazonaws.com'"
    Description: "Allow from, example 'https://vietfi-api-data.s3.ap-southeast-1.amazonaws.com'"

Resources:
  AddressCodeApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: "AddressCodeApi"
      StageName: Stage
      Cors:
        AllowMethods: "'GET, POST, PUT, DELETE'"
        AllowHeaders: "'Accept,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: !Ref CorsAllowOrigin
        MaxAge: "'3600'"
        AllowCredentials: false

  AddressCodeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: address_code_func/
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          TZ: Asia/Ho_Chi_Minh
          CORS_ALLOW_ORIGIN: !Ref CorsAllowOrigin
          BUCKET_NAME: !Ref BucketName
          DB_FILE_KEY: !Ref DataFileKey
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:ListBucket
            Resource: 
              - !Sub 'arn:aws:s3:::${BucketName}/*'
              - !Sub 'arn:aws:s3:::${BucketName}'
      Architectures:
        - x86_64
      Events:
        CountryList:
          Type: Api
          Properties:
            RestApiId: !Ref AddressCodeApi
            Path: /countries
            Method: get
        CountryGet:
          Type: Api
          Properties:
            RestApiId: !Ref AddressCodeApi
            Path: /countries/{iso_code}
            Method: get
        DivisionList:
          Type: Api
          Properties:
            RestApiId: !Ref AddressCodeApi
            Path: /countries/{iso_code}/divisions
            Method: get
        DivisionGet:
          Type: Api
          Properties:
            RestApiId: !Ref AddressCodeApi
            Path: /countries/{iso_code}/divisions/{division_code}
            Method: get
        SubDivisionList:
          Type: Api
          Properties:
            RestApiId: !Ref AddressCodeApi
            Path: /countries/{iso_code}/divisions/{division_code}/subdivisions
            Method: get
        SubDivisionGet:
          Type: Api
          Properties:
            RestApiId: !Ref AddressCodeApi
            Path: /countries/{iso_code}/divisions/{division_code}/subdivisions/{subdiv_code}
            Method: get
        L2SubDivisionList:
          Type: Api
          Properties:
            RestApiId: !Ref AddressCodeApi
            Path: /countries/{iso_code}/divisions/{division_code}/subdivisions/{subdiv_code}/l2subdivisions
            Method: get
        L2SubDivisionGet:
          Type: Api
          Properties:
            RestApiId: !Ref AddressCodeApi
            Path: /countries/{iso_code}/divisions/{division_code}/subdivisions/{subdiv_code}/l2subdivisions/{l2subdiv_code}
            Method: get
        AddressTextParser:
          Type: Api
          Properties:
            RestApiId: !Ref AddressCodeApi
            Path: /address
            Method: post

Outputs:
  AddressApi:
    Description: "API Gateway endpoint URL for Prod stage for AddressCodeFunction"
    Value: !Sub "https://${AddressCodeApi}.execute-api.${AWS::Region}.amazonaws.com/Stage/"
  AddressCodeFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt AddressCodeFunction.Arn
  AddressFunctionIamRole:
    Description: "Implicit IAM Role created for the function"
    Value: !GetAtt AddressCodeFunctionRole.Arn
